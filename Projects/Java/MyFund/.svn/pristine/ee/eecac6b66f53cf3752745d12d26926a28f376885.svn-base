package com.zj198.action.admin.user;

import java.util.HashMap;
import java.util.Map;

import org.apache.commons.lang3.StringUtils;

import com.zj198.action.BaseAction;
import com.zj198.model.UsrBank;
import com.zj198.model.UsrCompany;
import com.zj198.model.UsrFinanceorg;
import com.zj198.model.UsrPerson;
import com.zj198.model.UsrServiceorg;
import com.zj198.model.UsrUser;
import com.zj198.service.common.DictoryDataService;
import com.zj198.service.user.AccountService;
import com.zj198.service.user.ProfileService;
import com.zj198.util.Constants;

public class ProfileAction extends BaseAction{
	private UsrPerson usrPerson;
	private UsrBank usrBank;
	private UsrFinanceorg usrFinanceorg;
	private UsrServiceorg usrServiceorg;
	private UsrCompany usrCompany;
	private UsrUser usrUser;
	
	private Integer userId;
	private Short type;
	private Short audit;
	
	private ProfileService profileService;
	private DictoryDataService  dictoryDataService;
	private AccountService accountService;
	private Map<String,String> profileMap;
	
	//用户类型的详细信息  需审核
	public String execute(){
		if(userId==null || userId==0){
			msg="没有此用户。";
			return ERROR;
		}
		if(type==null || type==0){
			msg="没有此类型。";
			return ERROR;
		}
		if(profileService.getProfiles(userId)==null){
			msg="该用户未填充信息。";
		}
		int groupid = profileService.getGroupidByUserType(type);
		switch (groupid){
			case Constants.USERTYPE_GROUP_BANK:
				usrBank = (UsrBank)profileService.getProfiles(userId);
				if(usrBank!=null){
					profileMap=new HashMap<String,String>();
					String bankName="";
					if(usrBank.getBankid()!=null && usrBank.getBankid()!=0){
						bankName=dictoryDataService.findDicBankList().get(usrBank.getBankid()-1).getName();
					}
					profileMap.put("bankName",bankName);
				}
				return "bankProfile";
			case Constants.USERTYPE_GROUP_COMPANY:
				usrCompany = (UsrCompany)profileService.getProfiles(userId);
				if(usrCompany!=null){
					profileMap=new HashMap<String,String>();
					String regaddr="";
					String bizaddr="";
					String lipliveaddr="";
					String lphkaddr="";
					String companyType="";
					String companyTmployee="";
					String eduAtion="";
					String workYears="";
					String industry="";
					String marry="";
					if(usrCompany.getRegprovinceid()!=null&&usrCompany.getRegprovinceid()!=0){
						regaddr=dictoryDataService.getDicProvince(usrCompany.getRegprovinceid()).getName();
						if(usrCompany.getRegcityid()!=null && usrCompany.getRegcityid()!=0){
							regaddr+=" "+dictoryDataService.getDicCity(usrCompany.getRegcityid()).getName();
							if(usrCompany.getRegdistrictid()!=null&&usrCompany.getRegdistrictid()!=0){
								regaddr+=" "+dictoryDataService.getDicDistrict(usrCompany.getRegdistrictid()).getName();					
							}
						}
					}
					if(usrCompany.getBizprovinceid()!=null&&usrCompany.getBizprovinceid()!=0){
						bizaddr=dictoryDataService.getDicProvince(usrCompany.getBizprovinceid()).getName();
						if(usrCompany.getBizcityid()!=null && usrCompany.getBizcityid()!=0){
							bizaddr+=" "+dictoryDataService.getDicCity(usrCompany.getBizcityid()).getName();
							if(usrCompany.getBizdistrictid()!=null&&usrCompany.getBizdistrictid()!=0){
								bizaddr+=" "+dictoryDataService.getDicDistrict(usrCompany.getBizdistrictid()).getName();
							}
						}
					}
					if(usrCompany.getLpliveprovinceid()!=null&&usrCompany.getLpliveprovinceid()!=0){
						 lipliveaddr=dictoryDataService.getDicProvince(usrCompany.getLpliveprovinceid()).getName();
						 if(usrCompany.getLplivecityid()!=0&&usrCompany.getLplivecityid()!=null){
							 lipliveaddr+=" "+dictoryDataService.getDicCity(usrCompany.getLplivecityid()).getName();
							 if(usrCompany.getLplivedistrictid()!=0&&usrCompany.getLplivedistrictid()!=null){
								 lipliveaddr+=" "+dictoryDataService.getDicDistrict(usrCompany.getLplivedistrictid()).getName();
							 }
						 }
					}
					if(usrCompany.getLphkprovinceid()!=null&&usrCompany.getLphkprovinceid()!=0){
						lphkaddr=dictoryDataService.getDicProvince(usrCompany.getLphkprovinceid()).getName();
						if(usrCompany.getLphkcityid()!=null && usrCompany.getLphkcityid()!=0){
							lphkaddr+=" "+dictoryDataService.getDicCity(usrCompany.getLphkcityid()).getName();
							if(usrCompany.getLphkdistrictid()!=null&&usrCompany.getLphkdistrictid()!=0){
								lphkaddr+=" "+dictoryDataService.getDicDistrict(usrCompany.getLphkdistrictid()).getName();
							}
						}
					}
					if(usrCompany.getEnterprisetypeid()!=null&&usrCompany.getEnterprisetypeid()!=0){
						companyType=dictoryDataService.getValueNameById(usrCompany.getEnterprisetypeid());
					}
					if(usrCompany.getEmployeesid()!=null&&usrCompany.getEmployeesid()!=0){
						companyTmployee=dictoryDataService.getValueNameById(usrCompany.getEmployeesid());
					}
					if(usrCompany.getLpeducation()!=null&&usrCompany.getLpeducation()!=0){
						eduAtion=dictoryDataService.getValueNameById(usrCompany.getLpeducation());
					}
					if(usrCompany.getLpindustryyears()!=null&&usrCompany.getLpindustryyears()!=0){
						workYears=dictoryDataService.getValueNameById(usrCompany.getLpindustryyears());
					}
					if(usrCompany.getIndustryid()!=null&&usrCompany.getIndustryid()!=0){
						industry=dictoryDataService.getIndustryById(usrCompany.getIndustryid()).getName();
					}
					if(usrCompany.getLpmarry()!=null&&usrCompany.getLpmarry()!=0){
						marry=dictoryDataService.getValueNameById(usrCompany.getLpmarry());
					}
					profileMap.put("regaddress",regaddr);
					profileMap.put("bizaddress",bizaddr);
					profileMap.put("lpliveaddress",lipliveaddr);
					profileMap.put("lphkaddress",lphkaddr);
					profileMap.put("companyType", companyType);
					profileMap.put("companyTmployee", companyTmployee);
					profileMap.put("eduAtion", eduAtion);
					profileMap.put("marry", marry);
					profileMap.put("workYears", workYears);
					profileMap.put("industry", industry);
				}
				return "companyProfile";
			case Constants.USERTYPE_GROUP_FINANCEORG:
				usrFinanceorg = (UsrFinanceorg)profileService.getProfiles(userId);
				if(usrFinanceorg!=null){
					profileMap=new HashMap<String,String>();
					String finregaddr="";
					String finbizaddr="";
					String fincompanyType="";
					if(usrFinanceorg.getRegprovinceid()!=null&&usrFinanceorg.getRegprovinceid()!=0){
						finregaddr=dictoryDataService.getDicProvince(usrFinanceorg.getRegprovinceid()).getName();
						if(usrFinanceorg.getRegcityid()!=null&&usrFinanceorg.getRegcityid()!=0){
							finregaddr+=" "+dictoryDataService.getDicCity(usrFinanceorg.getRegcityid()).getName();
							if(usrFinanceorg.getRegdistrictid()!=null&&usrFinanceorg.getRegdistrictid()!=0){
								finregaddr+=" "+dictoryDataService.getDicDistrict(usrFinanceorg.getRegdistrictid()).getName();
							}
						}
					}
					if(usrFinanceorg.getBizprovinceid()!=null&&usrFinanceorg.getBizprovinceid()!=0){
						finbizaddr=dictoryDataService.getDicProvince(usrFinanceorg.getBizprovinceid()).getName();
						if(usrFinanceorg.getBizcityid()!=null&&usrFinanceorg.getBizcityid()!=0){
							finbizaddr+=" "+dictoryDataService.getDicCity(usrFinanceorg.getBizcityid()).getName();
							if(usrFinanceorg.getBizdistrictid()!=null&&usrFinanceorg.getBizdistrictid()!=0){
								finbizaddr+=" "+dictoryDataService.getDicDistrict(usrFinanceorg.getBizdistrictid()).getName();
							}
						}
					}
					if(usrFinanceorg.getOrgtypeid()!=null&&usrFinanceorg.getOrgtypeid()!=0){
						fincompanyType=dictoryDataService.getValueNameById(usrFinanceorg.getOrgtypeid());
					}
					profileMap.put("regaddress", finregaddr);
					profileMap.put("bizaddress", finbizaddr);
					profileMap.put("companyType",fincompanyType);
				}
				return "financeorgProfile";
			case Constants.USERTYPE_GROUP_PERSONAL:
				usrPerson = (UsrPerson)profileService.getProfiles(userId);
				if(usrPerson!=null){
					profileMap=new HashMap<String,String>();
					String peraddr="";
					String psersoncareer="";
					String imtype1="";
					String imtype2="";
					String imtype3="";
					if(usrPerson.getProvinceid()!=null && usrPerson.getProvinceid()!=0){
						peraddr=dictoryDataService.getDicProvince(usrPerson.getProvinceid()).getName();
						if(usrPerson.getCityid()!=null && usrPerson.getCityid()!=0){
							peraddr+=" "+dictoryDataService.getDicCity(usrPerson.getCityid()).getName();
							if(usrPerson.getDistrictid()!=null && usrPerson.getDistrictid()!=0){
								peraddr+=" "+dictoryDataService.getDicDistrict(usrPerson.getDistrictid()).getName();
							}
						}
					}
					if(usrPerson.getCareerid()!=null&&usrPerson.getCareerid()!=0){
						psersoncareer=dictoryDataService.getValueNameById(usrPerson.getCareerid());
					}
					if(usrPerson.getIm1type()!=null&&usrPerson.getIm1type()!=0){
						imtype1=dictoryDataService.getValueNameById(usrPerson.getIm1type());
					}
					if(usrPerson.getIm2type()!=null&&usrPerson.getIm2type()!=0){
						imtype2=dictoryDataService.getValueNameById(usrPerson.getIm2type());
					}
					if(usrPerson.getIm3type()!=null&&usrPerson.getIm3type()!=0){
						imtype3=dictoryDataService.getValueNameById(usrPerson.getIm3type());
					}
					profileMap.put("address", peraddr);
					profileMap.put("psersoncareer",psersoncareer );
					profileMap.put("imtype1", imtype1);
					profileMap.put("imtype2",imtype2 );
					profileMap.put("imtype3", imtype3);
				}
				return "personProfile";
			case Constants.USERTYPE_GROUP_SERVICEORG:
				usrServiceorg = (UsrServiceorg)profileService.getProfiles(userId);
				if(usrServiceorg!=null){
					profileMap=new HashMap<String,String>();
					String serregaddr="";
					String serbizaddr="";
					String sercompanyType="";
					String serviceproduct="";
					if(usrServiceorg.getRegprovinceid()!=null&&usrServiceorg.getRegprovinceid()!=0){
						serregaddr=dictoryDataService.getDicProvince(usrServiceorg.getRegprovinceid()).getName();
						if(usrServiceorg.getRegcityid()!=null&&usrServiceorg.getRegcityid()!=0){
							serregaddr+=" "+dictoryDataService.getDicCity(usrServiceorg.getRegcityid()).getName();
							if(usrServiceorg.getRegdistrictid()!=null&&usrServiceorg.getRegdistrictid()!=0){
								serregaddr+=" "+dictoryDataService.getDicDistrict(usrServiceorg.getRegdistrictid()).getName();
							}
						}
					}
					if(usrServiceorg.getBizprovinceid()!=null&&usrServiceorg.getBizprovinceid()!=0){
						serbizaddr=dictoryDataService.getDicProvince(usrServiceorg.getBizprovinceid()).getName();
						if(usrServiceorg.getBizcityid()!=null&&usrServiceorg.getBizcityid()!=0){
							serbizaddr+=" "+dictoryDataService.getDicCity(usrServiceorg.getBizcityid()).getName();
							if(usrServiceorg.getBizdistrictid()!=null&&usrServiceorg.getBizdistrictid()!=0){
								serbizaddr+=" "+dictoryDataService.getDicDistrict(usrServiceorg.getBizdistrictid()).getName();
							}
						}
					}
					if(usrServiceorg.getOrgtypeid()!=null&&usrServiceorg.getOrgtypeid()!=0){
						sercompanyType=dictoryDataService.getValueNameById(usrServiceorg.getOrgtypeid());
					}
					if(StringUtils.isNotBlank(usrServiceorg.getServiceproduct())){
						serviceproduct=dictoryDataService.getValueNamesByIds(usrServiceorg.getServiceproduct());
					}
					profileMap.put("regaddress", serregaddr);
					profileMap.put("bizaddress", serbizaddr);
					profileMap.put("companyType", sercompanyType);
					profileMap.put("serviceproduct", serviceproduct);
				}
				return "serviceorgProfile";
		}
		return ERROR;
	}
	/**更改用户审核状态*/
	public String audit(){
		if(audit != null && audit == Constants.USER_AUDITSTATUS_NONE && type!= null && type !=0){
			int groupid = profileService.getGroupidByUserType(type);
			if(groupid == Constants.USERTYPE_GROUP_BANK){
				usrBank = (UsrBank)profileService.getProfiles(userId);
				if(usrBank!=null){
					if(usrBank.getBankid()!=null && usrBank.getBankid()!=0){
						usrBank.setDetailname(dictoryDataService.findDicBankList().get(usrBank.getBankid()-1).getName()+" "+usrBank.getDetailname());
						profileService.saveorupdate(usrBank);
					}else{
						msg="银行名称错误";
						return "ajax";
					}
				}
			}
		}
		if(userId!=null && userId!=0){
			if(audit !=null && audit != Constants.USER_AUDITSTATUS_DONE){
				accountService.updateUserAudit(userId, Constants.USER_AUDITSTATUS_DONE);
				audit=Constants.USER_AUDITSTATUS_DONE;
			}else{
				msg="已审核";
				return "ajax";
			}
		}else{
			msg="没有用户。";
			return ERROR;
		}
		msg=SUCCESS;
		return "ajax";
	}
	
	//set   get
	public UsrPerson getUsrPerson() {
		return usrPerson;
	}
	public UsrBank getUsrBank() {
		return usrBank;
	}
	public UsrFinanceorg getUsrFinanceorg() {
		return usrFinanceorg;
	}
	public UsrServiceorg getUsrServiceorg() {
		return usrServiceorg;
	}
	public UsrCompany getUsrCompany() {
		return usrCompany;
	}
	public UsrUser getUsrUser() {
		return usrUser;
	}
	public void setProfileService(ProfileService profileService) {
		this.profileService = profileService;
	}
	public void setUserId(Integer userId) {
		this.userId = userId;
	}
	public void setType(Short type) {
		this.type = type;
	}
	public Short getType() {
		return type;
	}
	public void setAudit(Short audit) {
		this.audit = audit;
	}
	public Short getAudit() {
		return audit;
	}
	public void setDictoryDataService(DictoryDataService dictoryDataService) {
		this.dictoryDataService = dictoryDataService;
	}
	public void setAccountService(AccountService accountService) {
		this.accountService = accountService;
	}
	public Map<String, String> getProfileMap() {
		return profileMap;
	}
	
}
