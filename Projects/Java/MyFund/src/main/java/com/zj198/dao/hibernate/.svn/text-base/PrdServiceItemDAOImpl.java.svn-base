/**
 * these codes are generated by self-defined template
 * @author: tju
 * @Date:Jun 26, 2012  4:15:07 PM
 */

package com.zj198.dao.hibernate;

import java.util.Calendar;
import java.util.Date;
import java.util.Hashtable;
import java.util.List;

import org.apache.commons.lang3.StringUtils;

import com.zj198.dao.PrdServiceItemDAO;
import com.zj198.model.PrdServiceItem;
import com.zj198.util.Pager;

public class PrdServiceItemDAOImpl extends HibernateDAO<PrdServiceItem, Integer> implements PrdServiceItemDAO {

	@Override
	public List<PrdServiceItem> findPrdServiceItemByType(int typeId) {
		String hql = "from PrdServiceItem where typeId = :typeId and isAuthenticated = 1 and isCancelled = 0 order by issuedDate desc";
		return list(hql,"typeId", typeId);
	}

	@Override
	public List<PrdServiceItem> findPrdServiceItemByRecentN(int n) {
		String hql= "from PrdServiceItem  where isAuthenticated = 1 and isCancelled = 0 " +
				"and (expiredDate is null or expiredDate > :today) order by id desc";
		
		return findTopRows(hql, n, "today", Calendar.getInstance().getTime());
	}

	/**查询条件:1.过期日为空或大于查询时间,　2.经过审核的服务信息,　3. 没有被发布方中止的信息*/
	@Override
	public Pager findServiceItemByAvailable(int typeId, int pageSize, int pageNo) {
		Hashtable<String, Object> params = new Hashtable<String, Object>();
		String hql = "from PrdServiceItem where (expiredDate is null or expiredDate > :today) and isAuthenticated = 1 and isCancelled = 0";
		params.put("today", Calendar.getInstance().getTime());
		if (typeId > 0) {
			hql  = hql + " and typeId = :typeId";
			params.put("typeId", typeId);
		}
		hql = hql + " order by issuedDate desc";
		return pagedQuery(hql, pageNo, pageSize,params);
	}
	
	public Pager findByPublisher(int contactId, int pageSize, int pageNo) {
		String hql = "from PrdServiceItem where contactId = :contactId order by id desc";
		return pagedQuery(hql, pageNo, pageSize, "contactId", contactId);
	}
	
	public Pager findByAdmin(String title, String companyName, String typeName, 
				Date issuedDate,  Date expiredDate, Short isAuthenticated, int pageSize, int pageNo) {
		String hql="from PrdServiceItem where isCancelled=0";
		Hashtable<String, Object> params = new Hashtable<String, Object>();
		
		
		if (isAuthenticated != null) {
			hql = hql + " and (isAuthenticated = :isAuthenticated)";
			params.put("isAuthenticated", isAuthenticated);
		}
		
		if (StringUtils.isNotBlank(title)){
			hql = hql + " and (title like :title) ";
			params.put("title", "%"+title+"%");
		}
		
		
		if (StringUtils.isNotBlank(companyName)){
			hql = hql + " and (companyName like :companyName) ";
			params.put("companyName", "%"+companyName+"%");
		}
		
		if (StringUtils.isNotBlank(typeName)){
			hql = hql + " and (typeName like :typeName) ";
			params.put("typeName", "%"+typeName+"%");
		}
		
		
		
		if (issuedDate != null && expiredDate != null) {
			hql = hql + " and (issuedDate between :startDate  and :endDate) ";
			params.put("startDate", issuedDate);
			params.put("endDate", expiredDate);
		}
		
		hql = hql +  "order by issuedDate desc";
		return this.pagedQuery(hql, pageNo, pageSize, params);
	}

	@Override
	public Pager findUnauthorizedServiceInfo(int pageSize, int pageNo) {
		String hql = "from PrdServiceItem where isAuthenticated = 0 and isCancelled=0";
		return pagedQuery(hql, pageNo, pageSize);
	}
	


}
